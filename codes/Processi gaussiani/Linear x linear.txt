  # Modify kernel to adapt to definition given
  def linearTimesLinear(xa, xb, sb, sv, c):
      xa = xa - c
      xb = xb - c
      kernel = sb+sv*DotProduct(sigma_0=0).__call__(xa,xb)
      return(kernel**2)

  fig,  ax2 = plt.subplots(1, 1, figsize=(4, 4))
  xlim = (-3, 3)
  X = np.expand_dims(np.linspace(*xlim, num=100), 1)
  zero = np.array([[1]])

  # Kernel: parameters and evaluation
  sb=0
  sv=1
  c=0
  S0 = linearTimesLinear(X, zero, sb, sv, c)

  # Make the plots
  fig.tight_layout()
  plt.plot(X[:,0], S0[:,0], label='$k(x,1)$')
  plt.legend(loc=1)
  plt.xlim(xlim)
  plt.show()